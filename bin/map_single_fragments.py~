#!/usr/bin/env python

"""
Module docstring.
"""

import sys
import argparse

def process_command_line(argv):
    """
    Return a 2-tuple: (settings object, args list).
    `argv` is a list of arguments, or `None` for ``sys.argv[1:]``.
    """
    if argv is None:
        argv = sys.argv[1:]

    # initialize the parser object, replace the description
    parser = argparse.ArgumentParser(description='Script description here.')

    # define options here:
    # For example, this:
    # parser.add_argument('integers', metavar='N', type=int, nargs='+',
    #                    help='an integer for the accumulator')
    # parser.add_argument('--sum', dest='accumulate', action='store_const',
    #               const=sum, default=max,
    #               help='sum the integers (default: find the max)')
    # Will generate this help:
    #usage: prog.py [-h] [--sum] N [N ...]
    #Process some integers.
    #positional arguments:
    # N           an integer for the accumulator
    #
    #optional arguments:
    # -h, --help  show this help message and exit
    # --sum       sum the integers (default: find the max)

    settings = parser.parse_args(argv)

    return settings

def main(argv=None):
    settings = process_command_line(argv)
    # application code here, like:
    # run(settings, args)
    return 0        # success

if __name__ == '__main__':
    status = main()
    sys.exit(status)
